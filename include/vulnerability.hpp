#ifndef _vulnerability
#define _vulnerability

#include "../include/hyper.hpp"
#include "../include/gain.hpp"

/**
 * \brief Bayes Vulnerability of a probability distribution.
 *
 * It is the adversary's probability of guessing a secret correctly in one try.
 *
 * \param dist A prior probability distribution on a set of secrets
 *
 * \return Bayes Vulnerability of the distribution in the parameter @ref **dist**.
 */
long double bayesVulnerability(Distribution &dist);

/** 
 * \brief Posterior Bayes Vulnerability.
 *
 * It is the adversary's expected probability of guessing a secret correctly in one try.
 *
 * Each Bayes Vulnerability of a posterior distribution is weighted by its outer probability.
 *
 * \param hyper A hyper-distribution
 *
 * \return Posterior Bayes Vulnerability of the hyper-distribution in the parameter @ref **hyper**.
 */
long double bayesVulnerability(Hyper &hyper);

/**
 * \brief A function which measures how vulnerable a secret is.
 *
 * It corresponds to the expected gain of an adversary guessing the secret correctly,
 * given a set of actions that she can take.
 *
 * \param gain A gain function for a set of secrets.
 *
 * \return g-vulnerability of the prior distribution pointed by the parameter @ref **gain**.
 */
long double gVulnerability(Gain &gain);

/**
 * \brief Posterior g-vulnerability. A function which measures how vulnerable a secret is after passing in a channel. 
 *
 * Each posterior distribution on the set of secrets gives an expected gain for the adversary.
 * So the posterior g-vulnerability is the expected gain of the adversary over the inner distributions.
 *
 * \param hyper A hyper-distribution
 * \param gain A gain function for a set of secrets
 *
 * \return Posterior g-vulnerability of the hyper-distribution in the parameter @ref hyper and the gain function of the parameter @ref **gain**.
 */
long double gVulnerability(Hyper &hyper, Gain &gain);

/**
 * \brief The probability of the adversary guess the value of the secret correctly in
 * k tries, looking into a prior distribution.
 *
 * \param dist A prior probability distribution on a set of secrets.
 * \param k Number of tries that the adversary has to guess the secret
 *
 * \return A probability value.
 */
long double kTries(Distribution &dist, int k);

/**
 * \brief The adversary's probability of guessing the secret correctly in
 * k tries, looking into a hyper-distribution.
 *
 * \param hyper A hyper-distribution
 * \param k Number of tries that the adversary has to guess the secret
 *
 * \return A probability value.
 */
long double kTries(Hyper &hyper, int k);

#endif
